{
    "sourceFile": "src/pages/LoginPage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733642550417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733642550417,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport { loginUser } from \"../api\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport backgroundImage from \"../assets/images/background.jpg\";\r\n\r\n// Fungsi untuk menghitung mundur\r\nconst calculateCountdown = (startTime) => {\r\n  const now = new Date().getTime();\r\n  const distance = startTime - now;\r\n  if (distance <= 0) return null;\r\n\r\n  const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  return `${hours > 0 ? `${hours}h ` : \"\"}${minutes}m ${seconds}s`;\r\n};\r\n\r\nfunction LoginPage() {\r\n  const [nim, setNim] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [countdown, setCountdown] = useState(null);\r\n  const [loginWindow, setLoginWindow] = useState({});\r\n  const [isPopupOpen, setIsPopupOpen] = useState(true); // Popup kontrol\r\n  const [isLoginAllowed, setIsLoginAllowed] = useState(false); // Mengontrol login aktif\r\n  const navigate = useNavigate();\r\n\r\n  // Ambil waktu login dari backend\r\n  useEffect(() => {\r\n    const fetchLoginWindow = async () => {\r\n      try {\r\n        const response = await fetch(\"/api/v1/login-window\");\r\n        const data = await response.json();\r\n        setLoginWindow(data);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch login window:\", err);\r\n      }\r\n    };\r\n\r\n    fetchLoginWindow();\r\n\r\n    const countdownInterval = setInterval(() => {\r\n      if (loginWindow.start) {\r\n        const startTime = new Date(loginWindow.start).getTime();\r\n        const countdownTime = calculateCountdown(startTime);\r\n        setCountdown(countdownTime);\r\n\r\n        if (!countdownTime) {\r\n          setIsLoginAllowed(true); // Aktifkan login saat waktu tiba\r\n          setIsPopupOpen(false); // Tutup popup jika waktu selesai\r\n        }\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdownInterval);\r\n  }, [loginWindow.start]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!nim) {\r\n      setError(\"NIM harus diisi.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await loginUser(nim);\r\n\r\n      if (response.token) {\r\n        localStorage.setItem(\"token\", response.token);\r\n        localStorage.setItem(\"nim\", nim);\r\n        navigate(\"/vote\");\r\n      } else {\r\n        setError(\"Login gagal. Token tidak diterima.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Terjadi kesalahan: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-[#331064] to-violet-700 flex flex-col items-center justify-center\">\r\n      {/* Background Image Section */}\r\n      <div\r\n        className=\"text-center w-96 h-64 pt-10 rounded-t-xl shadow-2xl bg-cover bg-center text-white\"\r\n        style={{ backgroundImage: `url(${backgroundImage})` }}\r\n      >\r\n        <h1 className=\"text-3xl font-bold\">VOTE KETUA HIMAIF</h1>\r\n        <h2 className=\"font-bold\">Periode 2024-2025</h2>\r\n        <p className=\"text-sm mt-8\">\r\n          Halooo Mahasiswa / Bapak dan Ibu Dosen Informatika Sahid Surakarta cukup masukan Nim aja yaa buat login, gunakan hak vote kalian dengan benar!\r\n        </p>\r\n      </div>\r\n\r\n      {/* Popup Countdown */}\r\n      {isPopupOpen && countdown && (\r\n        <div className=\"fixed top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n            <h2 className=\"text-xl font-bold text-center mb-4\">Login Dimulai Dalam:</h2>\r\n            <p className=\"text-center text-2xl\">{countdown}</p>\r\n            <button\r\n              onClick={() => setIsPopupOpen(false)}\r\n              className=\"mt-4 bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition\"\r\n            >\r\n              Tutup\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Login Form */}\r\n      <div className=\"bg-white h-64 justify-center items-center p-6 rounded-sm shadow-2xl w-96\">\r\n        <h2 className=\"text-lg font-semibold text-center mb-4\">USER LOGIN</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"mb-4\">\r\n            <label className=\"flex items-center bg-gray-100 px-3 py-2 rounded-lg shadow-inner\">\r\n              <FaUserAlt className=\"text-violet-700 mr-2\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"NIM Mahasiswa\"\r\n                value={nim}\r\n                onChange={(e) => setNim(e.target.value)}\r\n                className=\"w-full bg-transparent outline-none text-gray-700\"\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          {/* Show spinner if loading */}\r\n          <button\r\n            type=\"submit\"\r\n            className={`w-full py-2 rounded-lg ${\r\n              isLoginAllowed\r\n                ? \"bg-violet-700 text-white hover:bg-[#331064] transition\"\r\n                : \"bg-gray-400 text-gray-700 cursor-not-allowed\"\r\n            }`}\r\n            disabled={!isLoginAllowed || loading}\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex justify-center items-center\">\r\n                <ClipLoader size={20} color={\"#ffffff\"} loading={loading} />\r\n              </div>\r\n            ) : (\r\n              \"Login\"\r\n            )}\r\n          </button>\r\n        </form>\r\n        {error && <p className=\"text-red-500 mt-4 text-center\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"
        }
    ]
}